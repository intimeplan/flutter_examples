## Github Actions 工作流程部署到 Play Store 中的內部測試
name:  AUTO_RELEASE_BUILD

on:
  # 當任何新程式碼推送到主分支時執行此工作流程
  push:
    branches: [main]

jobs:
  android-release-build:
    name: android-release-build
    runs-on: ubuntu-latest

    env:
      ANDROID_KEYSTORE: "android/_local/upload-keystore.jks"
      ANDROID_KEYSTORE_PROPERTIES: "android/_local/key.properties"
      GCP_SERVICE_ACCOUNT: "android/_local/gcp_service_account.json"

    steps:
      # Checkout repository codebase
      # https://github.com/actions/checkout
      # https://stackoverflow.com/questions/67131269/what-is-the-use-of-actions-checkout-in-github-actions
      - name: Checkout Branch Main
        uses: actions/checkout@v4

      # Setup Java in VM
      # https://github.com/actions/setup-java
      - name: Setup Java for Android
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 19


      # Setup Flutter in VM
      # https://github.com/subosito/flutter-action
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.19.3
      - run: flutter doctor -v


      # Decode Android Keystore
      - name: Decode Android Keystore, Properties and GCP Service Account
        run: |  
          mkdir "android/_local"
          touch ${{env.ANDROID_KEYSTORE}}
          echo "${{secrets.ANDROID_KEYSTORE}}" | base64 --decode > ${{env.ANDROID_KEYSTORE}}
          touch ${{env.ANDROID_KEYSTORE_PROPERTIES}}
          echo "${{ secrets.ANDROID_KEYSTORE_PROPERTIES }}" | base64 --decode > ${{ env.ANDROID_KEYSTORE_PROPERTIES }}
          touch ${{env.GCP_SERVICE_ACCOUNT}}
          echo "${{ secrets.GCP_SERVICE_ACCOUNT }}" | base64 --decode > ${{ env.GCP_SERVICE_ACCOUNT }}


      # Build Android Bundle
      - name: Flutter Install Dependencies
        run: flutter pub get

      # Run Fastlane
      - run: |
          cd android
          fastlane internal


#      - name: Build App Bundle
#        run: flutter build appbundle --release --obfuscate --split-debug-info=build/app/outputs/symbols
#
#
#      # Deploy bundle to Google Play internal track
#      # https://github.com/r0adkll/upload-google-play
#      - name: Deploy to Play Store (Internal Track)
#        uses: r0adkll/upload-google-play@v1
#        with:
#          serviceAccountJson: ${{env.GCP_SERVICE_ACCOUNT}}
#          packageName: app.intimeplan.flutterexp
#          track: internal
#          status: completed
#          releaseFiles: build/app/outputs/bundle/release/app-release.aab
#          mappingFile: build/app/outputs/mapping/release/mapping.txt
#          debugSymbols: build/app/intermediates/merged_native_libs/release/out/lib
